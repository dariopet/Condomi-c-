@model WebApplication.Sueldos


@{
    ViewBag.Title = "Edit";
    string pagoOriginal = Convert.ToDecimal(TempData["monto"]).ToString().Replace(",", ".");
    <script src="../../Scripts/sueldosDinamico.js"> </script>
    <script>
        getDatosSueldo("editar");
    </script>
}

<div class="modal-header ">
    <a type="button" class="close" data-dismiss="modal" aria-hidden="true" href="">&times;</a>
    <h4 class="modal-title" id="myModalLabel">Editar</h4>
</div>
 
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="modal-body ">
        <div class="form-horizontal">              
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.idSueldo)
        @Html.HiddenFor(model=>model.idTercero)
        @Html.HiddenFor(model=>model.fecha)
        @Html.HiddenFor(model=>model.idUsuario)

            <input type="hidden" value="@pagoOriginal" id="pagoOriginal" />
            <input type="hidden" value="@Model.idTercero" id="empleados" />          
           
            <div class="form-group">
                <b class="control-label col-md-3">Sueldo base</b>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.@base, new { htmlAttributes = new {@class = "form-control", @id = "base", @onchange = "getPrecioHora()" } })
                    @Html.ValidationMessageFor(model => model.@base, "", new { @class = "text-danger" })
                </div>

                <b class="control-label col-md-3">Valor hora</b>
                <div class="col-md-3">
                    <input id="valorhora" class="form-control" onchange="calcularSueldo()" value="0" />

                </div>
            </div>
            <div class="form-group">
                <b class="control-label col-md-3">Período</b>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.periodo, new { Value =Model.periodo.Month + "/" +Model.periodo.Year, @id = "periodo", @class = "form-control", @readonly = true, @onchange = "CargarHorasNoTrabajadas()" })
                    @Html.ValidationMessageFor(model => model.periodo, "", new { @class = "text-danger" })
                </div>
                <b class="control-label col-md-3"> Cobrado período anterior</b>
                <div class="col-md-3">
                    <input id="cobradoAnterior" class="form-control" value="0" readonly="readonly" />
                </div>
            </div>
            <div class="form-group">
                <b class="control-label col-md-3">Horas que no trabajo en el período</b>
                <h4 id="horasNoTrabajadas" class="control-label col-md-3"></h4>
                <b class="control-label col-md-3">Total adelantos</b>
                <h4 id="adelantos" class="control-label col-md-3"></h4>
            </div>
            <div class="form-group">
                <b class="control-label col-md-3"> Cuenta de origen</b>
                <div class="col-md-3">
                    @Html.DropDownList("idCuenta", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idCuenta, "", new { @class = "text-danger" })
                </div>
                <b class="control-label col-md-3">Monto a pagar</b>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.monto, new { htmlAttributes = new {  @class = "form-control", @id = "monto", @onchange = "calcularSueldo()" } })
                    @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
                </div>
            </div>

            <h3 id="aPagar" class="text-right"></h3>
        
        </div>
     </div>

        <div class="modal-footer">
            <a class="btn btn-warning hidden-print" data-dismiss="modal">Cancelar</a>
            <input class="btn btn-success hidden-print" type="submit" value="Aceptar" id="submit" />
        </div>
}


